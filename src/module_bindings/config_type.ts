// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN RUST INSTEAD.

import {
  // @ts-ignore
  Address,
  // @ts-ignore
  AlgebraicType,
  // @ts-ignore
  AlgebraicValue,
  // @ts-ignore
  BinaryReader,
  // @ts-ignore
  BinaryWriter,
  // @ts-ignore
  CallReducerFlags,
  // @ts-ignore
  DBConnectionBuilder,
  // @ts-ignore
  DBConnectionImpl,
  // @ts-ignore
  DBContext,
  // @ts-ignore
  Event,
  // @ts-ignore
  EventContextInterface,
  // @ts-ignore
  Identity,
  // @ts-ignore
  ProductType,
  // @ts-ignore
  ProductTypeElement,
  // @ts-ignore
  SumType,
  // @ts-ignore
  SumTypeVariant,
  // @ts-ignore
  TableCache,
  // @ts-ignore
  deepEqual,
} from "@clockworklabs/spacetimedb-sdk";
export type Config = {
  version: number,
  ownerIdentity: Identity,
  streamingPlatform: string,
  streamName: string,
  debugMode: boolean,
  updateHz: number,
  editorBorder: number,
  authentication: boolean,
  strictMode: boolean,
  editorGuidelines: string,
  configInit: boolean,
};

/**
 * A namespace for generated helper functions.
 */
export namespace Config {
  /**
  * A function which returns this type represented as an AlgebraicType.
  * This function is derived from the AlgebraicType used to generate this type.
  */
  export function getTypeScriptAlgebraicType(): AlgebraicType {
    return AlgebraicType.createProductType([
      new ProductTypeElement("version", AlgebraicType.createU32Type()),
      new ProductTypeElement("ownerIdentity", AlgebraicType.createIdentityType()),
      new ProductTypeElement("streamingPlatform", AlgebraicType.createStringType()),
      new ProductTypeElement("streamName", AlgebraicType.createStringType()),
      new ProductTypeElement("debugMode", AlgebraicType.createBoolType()),
      new ProductTypeElement("updateHz", AlgebraicType.createU32Type()),
      new ProductTypeElement("editorBorder", AlgebraicType.createU32Type()),
      new ProductTypeElement("authentication", AlgebraicType.createBoolType()),
      new ProductTypeElement("strictMode", AlgebraicType.createBoolType()),
      new ProductTypeElement("editorGuidelines", AlgebraicType.createStringType()),
      new ProductTypeElement("configInit", AlgebraicType.createBoolType()),
    ]);
  }

  export function serialize(writer: BinaryWriter, value: Config): void {
    Config.getTypeScriptAlgebraicType().serialize(writer, value);
  }

  export function deserialize(reader: BinaryReader): Config {
    return Config.getTypeScriptAlgebraicType().deserialize(reader);
  }

}


