// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
import {
  AlgebraicType,
  AlgebraicValue,
  BinaryReader,
  BinaryWriter,
  CallReducerFlags,
  ConnectionId,
  DbConnectionBuilder,
  DbConnectionImpl,
  DbContext,
  ErrorContextInterface,
  Event,
  EventContextInterface,
  Identity,
  ProductType,
  ProductTypeElement,
  ReducerEventContextInterface,
  SubscriptionBuilderImpl,
  SubscriptionEventContextInterface,
  SumType,
  SumTypeVariant,
  TableCache,
  TimeDuration,
  Timestamp,
  deepEqual,
} from "@clockworklabs/spacetimedb-sdk";
import { TextElement as __TextElement } from "./text_element_type";
import { ImageElement as __ImageElement } from "./image_element_type";
import { WidgetElement as __WidgetElement } from "./widget_element_type";

// A namespace for generated variants and helper functions.
export namespace ElementStruct {
  // These are the generated variant types for each variant of the tagged union.
  // One type is generated per variant and will be used in the `value` field of
  // the tagged union.
  export type TextElement = { tag: "TextElement", value: __TextElement };
  export type ImageElement = { tag: "ImageElement", value: __ImageElement };
  export type WidgetElement = { tag: "WidgetElement", value: __WidgetElement };

  // Helper functions for constructing each variant of the tagged union.
  // ```
  // const foo = Foo.A(42);
  // assert!(foo.tag === "A");
  // assert!(foo.value === 42);
  // ```
  export const TextElement = (value: __TextElement): ElementStruct => ({ tag: "TextElement", value });
  export const ImageElement = (value: __ImageElement): ElementStruct => ({ tag: "ImageElement", value });
  export const WidgetElement = (value: __WidgetElement): ElementStruct => ({ tag: "WidgetElement", value });

  export function getTypeScriptAlgebraicType(): AlgebraicType {
    return AlgebraicType.createSumType([
      new SumTypeVariant("TextElement", __TextElement.getTypeScriptAlgebraicType()),
      new SumTypeVariant("ImageElement", __ImageElement.getTypeScriptAlgebraicType()),
      new SumTypeVariant("WidgetElement", __WidgetElement.getTypeScriptAlgebraicType()),
    ]);
  }

  export function serialize(writer: BinaryWriter, value: ElementStruct): void {
      ElementStruct.getTypeScriptAlgebraicType().serialize(writer, value);
  }

  export function deserialize(reader: BinaryReader): ElementStruct {
      return ElementStruct.getTypeScriptAlgebraicType().deserialize(reader);
  }

}

// The tagged union or sum type for the algebraic type `ElementStruct`.
export type ElementStruct = ElementStruct.TextElement | ElementStruct.ImageElement | ElementStruct.WidgetElement;

export default ElementStruct;

