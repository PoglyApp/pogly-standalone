// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

/* eslint-disable */
/* tslint:disable */
import {
  AlgebraicType as __AlgebraicTypeValue,
  BinaryReader as __BinaryReader,
  BinaryWriter as __BinaryWriter,
  ClientCache as __ClientCache,
  ConnectionId as __ConnectionId,
  DbConnectionBuilder as __DbConnectionBuilder,
  DbConnectionImpl as __DbConnectionImpl,
  Identity as __Identity,
  SubscriptionBuilderImpl as __SubscriptionBuilderImpl,
  TableCache as __TableCache,
  TimeDuration as __TimeDuration,
  Timestamp as __Timestamp,
  deepEqual as __deepEqual,
  type AlgebraicType as __AlgebraicTypeType,
  type AlgebraicTypeVariants as __AlgebraicTypeVariants,
  type CallReducerFlags as __CallReducerFlags,
  type ErrorContextInterface as __ErrorContextInterface,
  type Event as __Event,
  type EventContextInterface as __EventContextInterface,
  type ReducerEventContextInterface as __ReducerEventContextInterface,
  type SubscriptionEventContextInterface as __SubscriptionEventContextInterface,
} from "spacetimedb";
import { TextElement } from "./text_element_type";
// Mark import as potentially unused
declare type __keep_TextElement = TextElement;
import { ImageElement } from "./image_element_type";
// Mark import as potentially unused
declare type __keep_ImageElement = ImageElement;
import { WidgetElement } from "./widget_element_type";
// Mark import as potentially unused
declare type __keep_WidgetElement = WidgetElement;

import * as ElementStructVariants from './element_struct_variants'

// The tagged union or sum type for the algebraic type `ElementStruct`.
export type ElementStruct = ElementStructVariants.TextElement |
  ElementStructVariants.ImageElement |
  ElementStructVariants.WidgetElement;

// A value with helper functions to construct the type.
export const ElementStruct = {
  // Helper functions for constructing each variant of the tagged union.
  // ```
  // const foo = Foo.A(42);
  // assert!(foo.tag === "A");
  // assert!(foo.value === 42);
  // ```
  TextElement: (value: TextElement): ElementStruct => ({ tag: "TextElement", value }),
  ImageElement: (value: ImageElement): ElementStruct => ({ tag: "ImageElement", value }),
  WidgetElement: (value: WidgetElement): ElementStruct => ({ tag: "WidgetElement", value }),

  getTypeScriptAlgebraicType(): __AlgebraicTypeType {
    return __AlgebraicTypeValue.Sum({
      variants: [
        { name: "TextElement", algebraicType: TextElement.getTypeScriptAlgebraicType() },
        { name: "ImageElement", algebraicType: ImageElement.getTypeScriptAlgebraicType() },
        { name: "WidgetElement", algebraicType: WidgetElement.getTypeScriptAlgebraicType() },
      ]
    });
  },

  serialize(writer: __BinaryWriter, value: ElementStruct): void {
      __AlgebraicTypeValue.serializeValue(writer, ElementStruct.getTypeScriptAlgebraicType(), value);
  },

  deserialize(reader: __BinaryReader): ElementStruct {
      return __AlgebraicTypeValue.deserializeValue(reader, ElementStruct.getTypeScriptAlgebraicType());
  },

}

export default ElementStruct;


